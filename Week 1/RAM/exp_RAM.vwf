/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 4.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 4000.0;
	SIMULATION_TIME = 4000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 25.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("d0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("d1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("d2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("d3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("d4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("d5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("d6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("d7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("inputd0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputd1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputd2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputd3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputd4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputd5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputd6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputd7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("161pc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("161load")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("161clr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ldar")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("memenab")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("pc_bus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("rd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sw_bus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("we")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("d0~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d1~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d2~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d3~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d4~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d5~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d6~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d7~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("74161:inst1|f74161:sub|9")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74161:inst1|f74161:sub|87")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74161:inst1|f74161:sub|99")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74161:inst1|f74161:sub|110")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74161:inst2|f74161:sub|9")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74161:inst2|f74161:sub|87")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74161:inst2|f74161:sub|99")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74161:inst2|f74161:sub|110")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74273:inst6|12")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74273:inst6|13")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74273:inst6|14")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74273:inst6|15")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74273:inst6|16")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74273:inst6|17")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74273:inst6|18")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("74273:inst6|19")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

GROUP("d")
{
	MEMBERS = "d7", "d6", "d5", "d4", "d3", "d2", "d1", "d0";
}

GROUP("pc_clr|ld|en")
{
	MEMBERS = "161clr", "161load", "161pc";
}

GROUP("m|we|rd")
{
	MEMBERS = "memenab", "we", "rd";
}

GROUP("sw|pc_bus")
{
	MEMBERS = "sw_bus", "pc_bus";
}

GROUP("d~result")
{
	MEMBERS = "d7~result", "d6~result", "d5~result", "d4~result", "d3~result", "d2~result", "d1~result", "d0~result";
}

GROUP("inputd")
{
	MEMBERS = "inputd7", "inputd6", "inputd5", "inputd4", "inputd3", "inputd2", "inputd1", "inputd0";
}

GROUP("pc")
{
	MEMBERS = "74161:inst1|f74161:sub|110", "74161:inst1|f74161:sub|99", "74161:inst1|f74161:sub|87", "74161:inst1|f74161:sub|9", "74161:inst2|f74161:sub|110", "74161:inst2|f74161:sub|99", "74161:inst2|f74161:sub|87", "74161:inst2|f74161:sub|9";
}

GROUP("ar")
{
	MEMBERS = "74273:inst6|19", "74273:inst6|18", "74273:inst6|17", "74273:inst6|16", "74273:inst6|15", "74273:inst6|14", "74273:inst6|13", "74273:inst6|12";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
		LEVEL 0 FOR 3050.0;
	}
}

TRANSITION_LIST("d0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("d1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("d2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("d3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("d4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("d5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("d6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("d7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("inputd0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 3250.0;
	}
}

TRANSITION_LIST("inputd1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 3250.0;
	}
}

TRANSITION_LIST("inputd2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 3250.0;
	}
}

TRANSITION_LIST("inputd3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("inputd4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 3650.0;
	}
}

TRANSITION_LIST("inputd5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 3650.0;
	}
}

TRANSITION_LIST("inputd6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 3650.0;
	}
}

TRANSITION_LIST("inputd7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 3250.0;
	}
}

TRANSITION_LIST("161pc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 3400.0;
	}
}

TRANSITION_LIST("161load")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 3400.0;
	}
}

TRANSITION_LIST("161clr")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("ldar")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 3350.0;
	}
}

TRANSITION_LIST("memenab")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("pc_bus")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 350.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 3350.0;
	}
}

TRANSITION_LIST("rd")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 3200.0;
	}
}

TRANSITION_LIST("sw_bus")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 350.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 3250.0;
	}
}

TRANSITION_LIST("we")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 3250.0;
	}
}

TRANSITION_LIST("d0~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 125.0;
		LEVEL Z FOR 200.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 3200.0;
	}
}

TRANSITION_LIST("d1~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 125.0;
		LEVEL Z FOR 3200.0;
	}
}

TRANSITION_LIST("d2~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 350.0;
		LEVEL Z FOR 200.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 125.0;
		LEVEL Z FOR 3200.0;
	}
}

TRANSITION_LIST("d3~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 350.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 3200.0;
	}
}

TRANSITION_LIST("d4~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 125.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 125.0;
		LEVEL Z FOR 3200.0;
	}
}

TRANSITION_LIST("d5~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 3200.0;
	}
}

TRANSITION_LIST("d6~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 150.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 3200.0;
	}
}

TRANSITION_LIST("d7~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 150.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL Z FOR 3200.0;
	}
}

TRANSITION_LIST("74161:inst1|f74161:sub|9")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("74161:inst1|f74161:sub|87")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("74161:inst1|f74161:sub|99")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("74161:inst1|f74161:sub|110")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("74161:inst2|f74161:sub|9")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 275.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 3425.0;
	}
}

TRANSITION_LIST("74161:inst2|f74161:sub|87")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 425.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 3475.0;
	}
}

TRANSITION_LIST("74161:inst2|f74161:sub|99")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 525.0;
		LEVEL 1 FOR 3475.0;
	}
}

TRANSITION_LIST("74161:inst2|f74161:sub|110")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("74273:inst6|12")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 3775.0;
	}
}

TRANSITION_LIST("74273:inst6|13")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("74273:inst6|14")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 625.0;
		LEVEL 1 FOR 3375.0;
	}
}

TRANSITION_LIST("74273:inst6|15")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("74273:inst6|16")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("74273:inst6|17")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("74273:inst6|18")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("74273:inst6|19")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sw|pc_bus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3;
}

DISPLAY_LINE
{
	CHANNEL = "sw_bus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "pc_bus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "m|we|rd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "memenab";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "we";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "rd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "ldar";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pc_clr|ld|en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "161clr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "161load";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "161pc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "inputd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "inputd7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inputd6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inputd5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inputd4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inputd3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inputd2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inputd1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inputd0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "d";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "d7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "d6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "d5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "d4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "d3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "d2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "d1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "d0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "d~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39;
}

DISPLAY_LINE
{
	CHANNEL = "d7~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "d6~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "d5~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "d4~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "d3~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "d2~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "d1~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "d0~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "pc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
	CHILDREN = 41, 42, 43, 44, 45, 46, 47, 48;
}

DISPLAY_LINE
{
	CHANNEL = "74161:inst1|f74161:sub|110";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "74161:inst1|f74161:sub|99";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "74161:inst1|f74161:sub|87";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "74161:inst1|f74161:sub|9";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "74161:inst2|f74161:sub|110";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "74161:inst2|f74161:sub|99";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "74161:inst2|f74161:sub|87";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "74161:inst2|f74161:sub|9";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "ar";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
	CHILDREN = 50, 51, 52, 53, 54, 55, 56, 57;
}

DISPLAY_LINE
{
	CHANNEL = "74273:inst6|19";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "74273:inst6|18";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "74273:inst6|17";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "74273:inst6|16";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "74273:inst6|15";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "74273:inst6|14";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "74273:inst6|13";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "74273:inst6|12";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 49;
}

TIME_BAR
{
	TIME = 50000;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 50000;
	MASTER = FALSE;
}
;
