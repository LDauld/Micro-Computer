/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 8.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 15000.0;
	SIMULATION_TIME = 16000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 50.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("A0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("D[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "D";
}

SIGNAL("D[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "D";
}

SIGNAL("D[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "D";
}

SIGNAL("D[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "D";
}

SIGNAL("D[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "D";
}

SIGNAL("D[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "D";
}

SIGNAL("D[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "D";
}

SIGNAL("D[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "D";
}

SIGNAL("dp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("KRD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("KWE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("qd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("tj")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("D[7]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D[6]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D[5]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D[4]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D[3]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D[2]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D[1]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D[0]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AD0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AD1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AD2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AD3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AD4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AD5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AD6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AD7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q8")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CLKCDU")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLRCDU")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ENCDU")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("L")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L";
}

SIGNAL("L[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L";
}

SIGNAL("L[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L";
}

SIGNAL("L[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L";
}

SIGNAL("L[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L";
}

SIGNAL("L[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L";
}

SIGNAL("LE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LE[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("SHUCLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

GROUP("A")
{
	MEMBERS = "A4", "A3", "A2", "A1", "A0";
}

GROUP("D~result")
{
	MEMBERS = "D[7]~result", "D[6]~result", "D[5]~result", "D[4]~result", "D[3]~result", "D[2]~result", "D[1]~result", "D[0]~result";
}

GROUP("AD")
{
	MEMBERS = "AD7", "AD6", "AD5", "AD4", "AD3", "AD2", "AD1", "AD0";
}

GROUP("R5")
{
	MEMBERS = "Q8", "Q7", "Q6", "Q5", "Q4", "Q3", "Q2", "Q1";
}

TRANSITION_LIST("A0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 250.0;
		}
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 250.0;
		}
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 750.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 250.0;
		}
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 125.0;
	}
}

TRANSITION_LIST("A1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 375.0;
		LEVEL 1 FOR 250.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 500.0;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 250.0;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 150.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 250.0;
			LEVEL 1 FOR 250.0;
		}
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 250.0;
		}
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 750.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 250.0;
			LEVEL 1 FOR 250.0;
		}
		LEVEL 0 FOR 125.0;
	}
}

TRANSITION_LIST("A2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 875.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 750.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 2100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 850.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 750.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 1150.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 1250.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 250.0;
		}
		LEVEL 1 FOR 125.0;
	}
}

TRANSITION_LIST("A3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 625.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 750.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 875.0;
	}
}

TRANSITION_LIST("A4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 875.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 2500.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 750.0;
		}
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 2500.0;
		LEVEL 1 FOR 750.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 875.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 300;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
	}
}

TRANSITION_LIST("CLR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 14950.0;
	}
}

TRANSITION_LIST("D[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15000.0;
	}
}

TRANSITION_LIST("D[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15000.0;
	}
}

TRANSITION_LIST("D[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15000.0;
	}
}

TRANSITION_LIST("D[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15000.0;
	}
}

TRANSITION_LIST("D[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15000.0;
	}
}

TRANSITION_LIST("D[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15000.0;
	}
}

TRANSITION_LIST("D[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15000.0;
	}
}

TRANSITION_LIST("D[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 15000.0;
	}
}

TRANSITION_LIST("dp")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15000.0;
	}
}

TRANSITION_LIST("KRD")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15000.0;
	}
}

TRANSITION_LIST("KWE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15000.0;
	}
}

TRANSITION_LIST("qd")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 200.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 200.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
			}
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 200.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
			}
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 200.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 200.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 200.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 200.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 200.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
				NODE
				{
					REPEAT = 1;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 200.0;
				}
			}
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 200.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 200.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 200.0;
			}
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
	}
}

TRANSITION_LIST("tj")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("D[7]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1875.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 2000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 250.0;
		}
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1375.0;
	}
}

TRANSITION_LIST("D[6]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1875.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 3750.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1375.0;
	}
}

TRANSITION_LIST("D[5]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 625.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1250.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 750.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 125.0;
	}
}

TRANSITION_LIST("D[4]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1125.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1050.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 4050.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 750.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 1125.0;
	}
}

TRANSITION_LIST("D[3]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1125.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1050.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1550.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 850.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1050.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 1125.0;
	}
}

TRANSITION_LIST("D[2]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2175.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 750.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 1300.0;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1625.0;
	}
}

TRANSITION_LIST("D[1]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 925.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 550.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 950.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1750.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1300.0;
		LEVEL 1 FOR 75.0;
	}
}

TRANSITION_LIST("D[0]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 125.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 250.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 750.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 75.0;
	}
}

TRANSITION_LIST("T1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 59;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 125.0;
	}
}

TRANSITION_LIST("T2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 125.0;
		NODE
		{
			REPEAT = 59;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 75.0;
	}
}

TRANSITION_LIST("T3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 175.0;
		NODE
		{
			REPEAT = 59;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 25.0;
	}
}

TRANSITION_LIST("T4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 225.0;
		NODE
		{
			REPEAT = 59;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 25.0;
	}
}

TRANSITION_LIST("AD0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 925.0;
		LEVEL 1 FOR 750.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 1250.0;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1500.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 1250.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1250.0;
		LEVEL 1 FOR 75.0;
	}
}

TRANSITION_LIST("AD1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1675.0;
		LEVEL 1 FOR 1750.0;
		LEVEL 0 FOR 1250.0;
		LEVEL 1 FOR 750.0;
		LEVEL 0 FOR 2250.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1750.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1325.0;
	}
}

TRANSITION_LIST("AD2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3425.0;
		LEVEL 1 FOR 2500.0;
		LEVEL 0 FOR 3750.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2750.0;
		LEVEL 0 FOR 1325.0;
	}
}

TRANSITION_LIST("AD3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1175.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 1750.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 750.0;
		LEVEL 0 FOR 575.0;
	}
}

TRANSITION_LIST("AD4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1175.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3500.0;
		LEVEL 1 FOR 4750.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1750.0;
		LEVEL 0 FOR 575.0;
	}
}

TRANSITION_LIST("AD5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("AD6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("AD7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("Q1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7925.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1750.0;
		LEVEL 1 FOR 1750.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1575.0;
	}
}

TRANSITION_LIST("Q2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1425.0;
		LEVEL 1 FOR 7500.0;
		LEVEL 0 FOR 4500.0;
		LEVEL 1 FOR 1575.0;
	}
}

TRANSITION_LIST("Q3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3175.0;
		LEVEL 1 FOR 4750.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 4500.0;
		LEVEL 0 FOR 1575.0;
	}
}

TRANSITION_LIST("Q4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8925.0;
		LEVEL 1 FOR 3500.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1575.0;
	}
}

TRANSITION_LIST("Q5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8925.0;
		LEVEL 1 FOR 3500.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1575.0;
	}
}

TRANSITION_LIST("Q6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8925.0;
		LEVEL 1 FOR 3500.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1575.0;
	}
}

TRANSITION_LIST("Q7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8925.0;
		LEVEL 1 FOR 3500.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1575.0;
	}
}

TRANSITION_LIST("Q8")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8925.0;
		LEVEL 1 FOR 3500.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1575.0;
	}
}

TRANSITION_LIST("CLKCDU")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("CLRCDU")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("ENCDU")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("L[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 550.0;
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("L[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 450.0;
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 450.0;
	}
}

TRANSITION_LIST("L[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 350.0;
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 550.0;
	}
}

TRANSITION_LIST("L[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		NODE
		{
			REPEAT = 21;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("L[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		NODE
		{
			REPEAT = 21;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
	}
}

TRANSITION_LIST("L[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 150.0;
		NODE
		{
			REPEAT = 21;
			LEVEL 0 FOR 500.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("LE[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 3000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
	}
}

TRANSITION_LIST("LE[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1950.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 375.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 475.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 175.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 325.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 500.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1025.0;
		LEVEL 0 FOR 475.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 325.0;
		LEVEL 0 FOR 375.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1175.0;
		LEVEL 0 FOR 125.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 300.0;
		}
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("LE[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 625.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 775.0;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 125.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 825.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 1525.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 475.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 125.0;
		LEVEL 0 FOR 475.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 325.0;
		LEVEL 0 FOR 375.0;
		LEVEL 1 FOR 375.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 375.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("LE[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 1125.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 825.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 425.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 225.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 175.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 275.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("LE[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 175.0;
		LEVEL 1 FOR 325.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 175.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 475.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 825.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 425.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 425.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 375.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 475.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 425.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 725.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 175.0;
		LEVEL 1 FOR 125.0;
		LEVEL 0 FOR 325.0;
		LEVEL 1 FOR 475.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 50.0;
	}
}

TRANSITION_LIST("LE[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 125.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 175.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1425.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 425.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 1600.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 475.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 475.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 475.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 50.0;
	}
}

TRANSITION_LIST("LE[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 625.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 175.0;
		LEVEL 1 FOR 125.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 175.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 200.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 100.0;
				LEVEL 1 FOR 100.0;
			}
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 175.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 175.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 175.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 175.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 425.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 375.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 275.0;
		LEVEL 1 FOR 325.0;
		LEVEL 0 FOR 50.0;
	}
}

TRANSITION_LIST("SHUCLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 150;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "qd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "tj";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLKCDU";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLRCDU";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ENCDU";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KRD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KWE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "D[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "D[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "D[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "D[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "D[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "D[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "D[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "D[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "D~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23, 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "D[7]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "D[6]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "D[5]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "D[4]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "D[3]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "D[2]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "D[1]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "D[0]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "A";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "A4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "A3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "A2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "A1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "A0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "R5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
	CHILDREN = 35, 36, 37, 38, 39, 40, 41, 42;
}

DISPLAY_LINE
{
	CHANNEL = "Q8";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "Q7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "Q6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "Q5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "Q4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "Q3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "Q2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "Q1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "AD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
	CHILDREN = 44, 45, 46, 47, 48, 49, 50, 51;
}

DISPLAY_LINE
{
	CHANNEL = "AD7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "AD6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "AD5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "AD4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "AD3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "AD2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "AD1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "AD0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "T1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "T2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "T3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "T4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SHUCLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
	CHILDREN = 58, 59, 60, 61, 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "L[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "L[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "L[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "L[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "L[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "L[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "LE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
	CHILDREN = 65, 66, 67, 68, 69, 70, 71;
}

DISPLAY_LINE
{
	CHANNEL = "LE[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "LE[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "LE[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "LE[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "LE[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "LE[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "LE[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 64;
}

TIME_BAR
{
	TIME = 200000;
	MASTER = TRUE;
}
;
